cmake_minimum_required(VERSION 2.6)
project(BlackVoxel)

find_package(SDL REQUIRED)
find_package(GLEW REQUIRED)

set(PROGNAME "blackvoxel")

set(addto_CMAKE_FLAGS "")
set(setto_CMAKE_LINKER_FLAGS "")
set(EXTRA_LIBS "")
execute_process(COMMAND getconf LONG_BIT OUTPUT_VARIABLE CPU_BIT)
if(NOT (("${CPU_BIT}" MATCHES "32") OR ("${CPU_BIT}" MATCHES "prop") OR ("${CPU_BIT}" MATCHES "64d") OR ("${CPU_BIT}" MATCHES "64")))
	message(FATAL_ERROR "CPU_BIT (${CPU_BIT}) isn't supported. Please set it manually.")
endif(NOT (("${CPU_BIT}" MATCHES "32") OR ("${CPU_BIT}" MATCHES "prop") OR ("${CPU_BIT}" MATCHES "64d") OR ("${CPU_BIT}" MATCHES "64")))

option(GOTO_ZERO_ZERO "WARNING: unstable. Set to ON if you want to go to (0, 0) when closing a window (in-game)" ${GOTO_ZERO_ZERO})
if(GOTO_ZERO_ZERO)
	add_definitions(-DGOTOZERO_ZERO)
endif()

option(PANDORA "Set to ON if targeting an OpenPandora device" ${PANDORA})
if(PANDORA)
	add_definitions(-DPANDORA)
	set(addto_CMAKE_FLAGS "${addto_CMAKE_FLAGS} -mcpu=cortex-a8 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize")
	set(CMAKE_INSTALL_PREFIX "/usr/share/blackvoxel" CACHE PATH "Set the folder where will be the datas")
else()
	#set(CMAKE_INSTALL_PREFIX "/mnt/utmp/share/blackvoxel" CACHE PATH "Set the folder where will be the datas")
endif()

set(COMPILEOPTION_DATAFILEPATH ${CMAKE_INSTALL_PREFIX} CACHE PATH "Set the folder where will be the datas; this is CMAKE_INSTALL_PREFIX" FORCE)
set(COMPILEOPTION_SAVEFOLDERNAME "Blackvoxel" CACHE PATH "Folder where datas, universes... are stocked")
set(COMPILEOPTION_USEHOMEDIRSTORAGE ON CACHE BOOL "Is save folder in HOME?")

set(GAME_SOURCE_FILE "")
file(GLOB GAME_SOURCE_FILE src/*.cpp)
set(GAME_SOURCE_FILE_TOADD "")
file(GLOB GAME_SOURCE_FILE_TOADD src/z/*.cpp)
set(GAME_SOURCE_FILE ${GAME_SOURCE_FILE} ${GAME_SOURCE_FILE_TOADD})
unset(GAME_SOURCE_FILE_TOADD)

set(addto_CMAKE_FLAGS "-Isrc/sc_Squirrel3/include")

if(WIN32)
	set(addto_CMAKE_FLAGS "${addto_CMAKE_FLAGS} -O3 -fmessage-length=0 -march=i686")
	set(setto_CMAKE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS} -s -Xlinker --large-address-aware -mwindows -L\"src/sc_Squirrel3/lib\" -lmingw32 -lSDLmain -lSDL -llibglew32 -lglu32 -lopengl32 -llibglut -lsquirrel -lsqstdlib")
else(WIN32)
	if("${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
		set(addto_CMAKE_FLAGS "${addto_CMAKE_FLAGS} -O3 -fmessage-length=0")
		set(setto_CMAKE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS} -s -zrelro -L\"src/sc_Squirrel3/lib\" -lGLU -lSDL -lGLEW -lGL -lsquirrel -lsqstdlib")
	elseif("${CMAKE_SYSTEM_NAME}" MATCHES "FreeBSD")
		set(addto_CMAKE_FLAGS "${addto_CMAKE_FLAGS} -O3 -fmessage-length=0")
		set(setto_CMAKE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS} -s -L\"src/sc_Squirrel3/lib\" -lGLU -lSDL -lGLEW -lGL -lsquirrel -lsqstdlib")
	elseif("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
		set(addto_CMAKE_FLAGS "${addto_CMAKE_FLAGS} -O3 -fmessage-length=0")
		set(setto_CMAKE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS} -s -L\"src/sc_Squirrel3/lib\" -lGLU -lSDL -lGLEW -lGL -lsquirrel -lsqstdlib")
	else()
		message(AUTHOR_WARNING "The system (${CMAKE_SYSTEM_NAME}) isn't recognized, using default config.")
		set(addto_CMAKE_FLAGS "${addto_CMAKE_FLAGS} -O3 -fmessage-length=0")
		set(setto_CMAKE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS} -s -L\"src/sc_Squirrel3/lib\" -lGLU -lSDL -lGLEW -lGL -lsquirrel -lsqstdlib")
	endif()
endif(WIN32)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${addto_CMAKE_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} ${addto_CMAKE_FLAGS}")

unset(addto_CMAKE_FLAGS)

set(CMAKE_EXE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS}")
set(CMAKE_SHARED_LINKER_FLAGS "${setto_CMAKE_LINKER_FLAGS}")

unset(setto_CMAKE_LINKER_FLAGS)

add_subdirectory(src/sc_Squirrel3)

set(EXTRA_LIBS squirrel sqstdlib)

add_executable(blackvoxel ${GAME_SOURCE_FILE})
target_link_libraries(blackvoxel ${EXTRA_LIBS})
set_target_properties(blackvoxel PROPERTIES COMPILE_DEFINITIONS "COMPILEOPTION_DATAFILESPATH=\"${CMAKE_INSTALL_PREFIX}\";COMPILEOPTION_SAVEFOLDERNAME=\"${COMPILEOPTION_SAVEFOLDERNAME}\";COMPILEOPTION_USEHOMEDIRSTORAGE=\"${COMPILEOPTION_USEHOMEDIRSTORAGE}\"")

install(CODE "message(\"Install BlackVoxel's executable...\")")
install(TARGETS blackvoxel DESTINATION ${CMAKE_INSTALL_PREFIX} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
install(CODE "message(\"Install BlackVoxel's datas...\")")
install(DIRECTORY VoxelTypes Misc gui Sound DESTINATION ${CMAKE_INSTALL_PREFIX} FILE_PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ DIRECTORY_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
install(CODE "message(\"+- Special case for non-directory BlackVoxel's datas...\")")
install(CODE "message(\"   +- Special case for tmplt_4.dat...\")")
install(FILES tmplt_4.dat DESTINATION ${CMAKE_INSTALL_PREFIX})
install(CODE "message(\"   +- Special case for randomnum.dat...\")")
install(FILES randomnum.dat DESTINATION ${CMAKE_INSTALL_PREFIX})
install(CODE "message(\"   +- Special case for Copyright.txt...\")")
install(FILES Copyright.txt DESTINATION ${CMAKE_INSTALL_PREFIX})
install(CODE "message(\"   +- Special case for LICENSE...\")")
install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_PREFIX} OPTIONAL)
install(CODE "message(\"   +- Special case for version.txt...\")")
install(FILES version.txt DESTINATION ${CMAKE_INSTALL_PREFIX} PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ GROUP_WRITE WORLD_READ WORLD_WRITE)
